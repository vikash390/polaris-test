services:
  polaris:
    image: alexmerced/polaris1126
    container_name: polaris
    ports:
      - "8181:8181"
      - "8182:8182"
    networks:
      - polaris-quickstart
    volumes:
      - ./icebergdata:/data
    environment:
      - AWS_REGION=dummy-region
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    command: # override the command to specify aws keys as dropwizard config
      - server
      - polaris-server.yml

  minio:
    image: quay.io/minio/minio:RELEASE.2025-07-18T21-56-31Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9090"
      
    volumes:
      - minio-data:/data
    command: server /data
    networks:
      - polaris-quickstart
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 15

  mc:
    image: quay.io/minio/minio:RELEASE.2025-07-18T21-56-31Z
    container_name: mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: /bin/bash
    restart: "no"
    command: >
      -c "mc alias set myminio http://minio:9000/ minio minio123 && 
           mc mb myminio/warehouse --ignore-existing"
    networks:
      - polaris-quickstart
   
volumes:
  minio-data:

networks:
  polaris-quickstart:
    name: polaris-quickstart